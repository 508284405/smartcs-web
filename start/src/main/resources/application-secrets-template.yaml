# 敏感信息加密配置模板
# 生产环境配置示例

smartcs:
  secrets:
    # 当前使用的密钥ID，用于新加密操作
    activeKid: "prod-key-2024"
    
    # 加密算法配置
    algorithm: "AES"
    transformation: "AES/GCM/NoPadding"
    ivLength: 12    # GCM模式IV长度（字节）
    tagLength: 128  # GCM认证标签长度（位）
    
    # 密钥映射表：密钥ID -> 密钥值（Base64编码的256位AES密钥）
    # 支持多个密钥存在，便于密钥轮换
    keys:
      # 当前生产密钥
      "prod-key-2024": "7zMZ79gIhnvzDE+BpCc/kCyDWn/xU7Ku3YXvh7eqk10="
      
      # 历史密钥（用于解密旧数据）
      # "prod-key-2023": "历史密钥，仅用于解密"
      
      # 测试环境密钥（仅供开发测试使用）
      # "test-key": "dGVzdC1rZXktZm9yLWRldmVsb3BtZW50LW9ubHk="

  # 迁移配置
  migration:
    # 是否启用API Key加密迁移（首次部署时设置为true，迁移完成后设置为false）
    encrypt-api-keys: false

# 安全配置要求：
# 1. 密钥长度：256位（32字节），Base64编码后约44个字符
# 2. 密钥生成：使用加密安全的随机数生成器
# 3. 密钥存储：
#    - 开发环境：可以存储在配置文件中
#    - 生产环境：建议使用环境变量或外部密钥管理服务
# 4. 密钥轮换：定期更换activeKid和对应密钥，保留历史密钥用于解密

# 生产环境部署建议：
# 1. 使用环境变量覆盖配置：
#    export SMARTCS_SECRETS_ACTIVE_KID=prod-key-2024
#    export SMARTCS_SECRETS_KEYS_PROD_KEY_2024=实际密钥值
# 
# 2. 或使用Spring Boot的外部配置文件：
#    java -jar app.jar --spring.config.additional-location=classpath:secrets.yaml
#
# 3. 集成外部密钥管理服务：
#    - AWS KMS / Azure Key Vault / HashiCorp Vault
#    - Kubernetes Secrets
#    - 企业级密钥管理系统

# 首次部署流程：
# 1. 生成密钥：使用SecretCryptoService.generateTestKey()或安全工具生成
# 2. 配置密钥：设置activeKid和keys映射
# 3. 启用迁移：设置encrypt-api-keys=true
# 4. 启动应用：自动执行API Key加密迁移
# 5. 验证结果：检查日志确认迁移成功
# 6. 关闭迁移：设置encrypt-api-keys=false
# 7. 清理数据：可选择清空原api_key明文字段