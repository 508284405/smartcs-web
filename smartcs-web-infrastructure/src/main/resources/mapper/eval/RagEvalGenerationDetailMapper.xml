<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leyue.smartcs.eval.mapper.RagEvalGenerationDetailMapper">

    <!-- RAG评估生成详情结果映射 -->
    <resultMap id="BaseResultMap" type="com.leyue.smartcs.eval.dataobject.RagEvalGenerationDetailDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="run_id" jdbcType="VARCHAR" property="runId"/>
        <result column="case_id" jdbcType="VARCHAR" property="caseId"/>
        
        <!-- 输入信息 -->
        <result column="final_prompt" jdbcType="LONGVARCHAR" property="finalPrompt"/>
        <result column="injected_contexts" jdbcType="LONGVARCHAR" property="injectedContexts" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="system_prompt" jdbcType="LONGVARCHAR" property="systemPrompt"/>
        
        <!-- 生成结果 -->
        <result column="generated_answer" jdbcType="LONGVARCHAR" property="generatedAnswer"/>
        <result column="generation_model_used" jdbcType="VARCHAR" property="generationModelUsed"/>
        <result column="model_params" jdbcType="LONGVARCHAR" property="modelParams" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="generation_latency_ms" jdbcType="INTEGER" property="generationLatencyMs"/>
        <result column="streaming_enabled" jdbcType="TINYINT" property="streamingEnabled"/>
        
        <!-- Token使用统计 -->
        <result column="input_tokens" jdbcType="INTEGER" property="inputTokens"/>
        <result column="output_tokens" jdbcType="INTEGER" property="outputTokens"/>
        <result column="total_tokens" jdbcType="INTEGER" property="totalTokens"/>
        <result column="cost_estimate_usd" jdbcType="DECIMAL" property="costEstimateUsd"/>
        
        <!-- 引用信息 -->
        <result column="citations" jdbcType="LONGVARCHAR" property="citations" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="citation_count" jdbcType="INTEGER" property="citationCount"/>
        <result column="citation_coverage_ratio" jdbcType="DECIMAL" property="citationCoverageRatio"/>
        
        <!-- RAGAS生成指标 -->
        <result column="faithfulness_score" jdbcType="DECIMAL" property="faithfulnessScore"/>
        <result column="answer_relevancy_score" jdbcType="DECIMAL" property="answerRelevancyScore"/>
        <result column="faithfulness_details" jdbcType="LONGVARCHAR" property="faithfulnessDetails" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="relevancy_details" jdbcType="LONGVARCHAR" property="relevancyDetails" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        
        <!-- 其他质量指标 -->
        <result column="citation_consistency_score" jdbcType="DECIMAL" property="citationConsistencyScore"/>
        <result column="completeness_score" jdbcType="DECIMAL" property="completenessScore"/>
        <result column="conciseness_score" jdbcType="DECIMAL" property="concisenessScore"/>
        <result column="groundedness_score" jdbcType="DECIMAL" property="groundednessScore"/>
        <result column="factual_correctness_score" jdbcType="DECIMAL" property="factualCorrectnessScore"/>
        
        <!-- 文本质量分析 -->
        <result column="answer_length" jdbcType="INTEGER" property="answerLength"/>
        <result column="answer_sentences" jdbcType="INTEGER" property="answerSentences"/>
        <result column="answer_complexity_score" jdbcType="DECIMAL" property="answerComplexityScore"/>
        <result column="readability_score" jdbcType="DECIMAL" property="readabilityScore"/>
        
        <!-- 与期望答案的比较 -->
        <result column="semantic_similarity_score" jdbcType="DECIMAL" property="semanticSimilarityScore"/>
        <result column="bleu_score" jdbcType="DECIMAL" property="bleuScore"/>
        <result column="rouge_scores" jdbcType="LONGVARCHAR" property="rougeScores" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        
        <!-- 错误信息 -->
        <result column="error_stage" jdbcType="VARCHAR" property="errorStage"/>
        <result column="error_message" jdbcType="LONGVARCHAR" property="errorMessage"/>
        <result column="warning_messages" jdbcType="LONGVARCHAR" property="warningMessages" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        
        <!-- 扩展信息 -->
        <result column="model_response_metadata" jdbcType="LONGVARCHAR" property="modelResponseMetadata" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="metadata" jdbcType="LONGVARCHAR" property="metadata" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="created_at" jdbcType="BIGINT" property="createdAt"/>
        <result column="updated_at" jdbcType="BIGINT" property="updatedAt"/>
    </resultMap>

    <!-- 根据运行ID查询生成详情列表 -->
    <select id="selectByRunId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        ORDER BY created_at ASC
    </select>

    <!-- 根据运行ID和用例ID查询生成详情 -->
    <select id="selectByRunIdAndCaseId" resultMap="BaseResultMap">
        SELECT * FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND case_id = #{caseId}
    </select>

    <!-- 根据用例ID查询生成详情列表 -->
    <select id="selectByCaseId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM t_rag_eval_generation_detail 
        WHERE case_id = #{caseId} 
        ORDER BY created_at DESC
    </select>

    <!-- 查询有错误的生成详情 -->
    <select id="selectWithErrors" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NOT NULL 
        ORDER BY created_at ASC
    </select>

    <!-- 查询成功的生成详情 -->
    <select id="selectSuccessful" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL 
        ORDER BY created_at ASC
    </select>

    <!-- 统计运行的生成详情数量 -->
    <select id="countByRunId" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId}
    </select>

    <!-- 统计运行的成功生成详情数量 -->
    <select id="countSuccessfulByRunId" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL
    </select>

    <!-- 统计运行的失败生成详情数量 -->
    <select id="countFailedByRunId" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NOT NULL
    </select>

    <!-- 查询生成延迟统计 -->
    <select id="selectGenerationLatencyStats" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT 
            AVG(generation_latency_ms) as avg_generation_latency,
            MIN(generation_latency_ms) as min_generation_latency,
            MAX(generation_latency_ms) as max_generation_latency,
            STDDEV(generation_latency_ms) as std_generation_latency
        FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL
    </select>

    <!-- 查询Token使用统计 -->
    <select id="selectTokenUsageStats" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT 
            AVG(input_tokens) as avg_input_tokens,
            MAX(input_tokens) as max_input_tokens,
            MIN(input_tokens) as min_input_tokens,
            AVG(output_tokens) as avg_output_tokens,
            MAX(output_tokens) as max_output_tokens,
            MIN(output_tokens) as min_output_tokens,
            AVG(total_tokens) as avg_total_tokens,
            SUM(total_tokens) as total_tokens_used,
            AVG(cost_estimate_usd) as avg_cost,
            SUM(cost_estimate_usd) as total_cost
        FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL
    </select>

    <!-- 查询生成质量指标统计 -->
    <select id="selectQualityMetricsStats" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT 
            AVG(faithfulness_score) as avg_faithfulness,
            AVG(answer_relevancy_score) as avg_answer_relevancy,
            AVG(citation_consistency_score) as avg_citation_consistency,
            AVG(completeness_score) as avg_completeness,
            AVG(conciseness_score) as avg_conciseness,
            AVG(groundedness_score) as avg_groundedness,
            AVG(factual_correctness_score) as avg_factual_correctness,
            AVG(semantic_similarity_score) as avg_semantic_similarity,
            AVG(bleu_score) as avg_bleu_score
        FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL
    </select>

    <!-- 查询引用统计 -->
    <select id="selectCitationStats" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT 
            AVG(citation_count) as avg_citation_count,
            MAX(citation_count) as max_citation_count,
            MIN(citation_count) as min_citation_count,
            AVG(citation_coverage_ratio) as avg_citation_coverage,
            COUNT(CASE WHEN citation_count > 0 THEN 1 END) as cases_with_citations,
            COUNT(*) as total_cases
        FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL
    </select>

    <!-- 查询答案长度统计 -->
    <select id="selectAnswerLengthStats" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT 
            AVG(answer_length) as avg_answer_length,
            MAX(answer_length) as max_answer_length,
            MIN(answer_length) as min_answer_length,
            AVG(answer_sentences) as avg_answer_sentences,
            AVG(answer_complexity_score) as avg_complexity_score,
            AVG(readability_score) as avg_readability_score
        FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL
    </select>

    <!-- 查询高质量答案（所有指标都高于阈值） -->
    <select id="selectHighQualityAnswers" resultMap="BaseResultMap">
        SELECT * FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL
        AND faithfulness_score >= #{faithfulnessThreshold}
        AND answer_relevancy_score >= #{relevancyThreshold}
        AND citation_consistency_score >= #{consistencyThreshold}
        ORDER BY faithfulness_score DESC, answer_relevancy_score DESC
    </select>

    <!-- 查询需要人工检查的答案（某些指标较低） -->
    <select id="selectAnswersNeedingReview" resultMap="BaseResultMap">
        SELECT * FROM t_rag_eval_generation_detail 
        WHERE run_id = #{runId} 
        AND error_message IS NULL
        AND (
            faithfulness_score < #{faithfulnessThreshold} 
            OR answer_relevancy_score < #{relevancyThreshold}
            OR citation_consistency_score < #{consistencyThreshold}
        )
        ORDER BY faithfulness_score ASC, answer_relevancy_score ASC
    </select>

    <!-- 删除运行的所有生成详情 -->
    <delete id="deleteByRunId" parameterType="java.lang.String">
        DELETE FROM t_rag_eval_generation_detail WHERE run_id = #{runId}
    </delete>

    <!-- 根据运行ID列表批量删除生成详情 -->
    <delete id="deleteByRunIds">
        DELETE FROM t_rag_eval_generation_detail 
        WHERE run_id IN
        <foreach collection="runIds" item="runId" open="(" separator="," close=")">
            #{runId}
        </foreach>
    </delete>

</mapper>